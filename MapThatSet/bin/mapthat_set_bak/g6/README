Hans, Ruddhi, Akiva, Najaf

mapper: [1, 3, 3, 4, 1]
[1, 3, 4] -> [1,  3,4]

1 -> [1, 3, 4]
3 -> [1, 3, 4]
4 -> [1, 3, 4]

[2, 3] -> [3]
1 -> [1, 3 ,4]
2 -> [3]
3 -> [3]
4 -> [1, 3, 4]

Update rules
[1, 4] -> [1, 4]
1 -> [1, 4]
2 -> [3]
3 -> [3]
4 -> [1, 4]


Maintain a set of rules (Map<Set<Integer>,Set<Integer>>)
Maintain a set of possibilities (Map<Integer, Set<Integer>>)

Variables:
Rules = Map<Set<Integer>, Set<Integer>>
Possibilities = Map<Integer, Set<Integer>>

Methods:
Create guess (making a random guess, with some random # of possibilities from those keys where we do not yet know the value)
Update possibilities (removing elements from possibilities as seen by new guess)
Update rules <- (going through rules, removing element from sets if key->value found and equal # in key->value)
Check if solution reached <- trivial (going through the map, checking that each element maps to 1 thing)